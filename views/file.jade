extends layout

block content
  div.bg-light.container
    a(href="/")="Home"
    span=" >> "
    a(href="/projects")=data.projectName
    h1=data.file
    h2.rating.big-rating(class="rating-#{data.rating}")=data.rating
    div
      div.tile
        span="Complexity: "
        span=data.complexity.errors.length
      div.tile
        span="Security: "
        span=data.security.length
      div.tile
        span="Lint: "
        span=data.jshint.length
      div.tile
        span="Duplicates: "
        span=data.duplicates.length
      - if (data.coverage)
        div.tile(class="coverage-bg-#{data.coverage.summary.statements.status}")
          span="Coverage: "
          span=(data.coverage.summary.statements.pct + '%')
      - else
        div.tile(class="coverage-bg-red")
          span="Coverage: "
          span='0%'
    div
      if data.complexity.errors.length
        section.summary
          h2="Complexity"
          table
            tr
              th="Function"
              th="Line number"
              th="Message"
            - each err in data.complexity.errors
              tr
                td=err.name
                td=err.position
                td=err.msg
      if data.security.length
        section.summary
          h2="Security"
          table
            tr
              th="Message"
              th="Line Number"
            - each err in data.security
              tr
                td=err.rule.desc
                td=err.line
      if data.jshint.length
        section.summary
          h2="Lint"
          table
            tr
              th="Message"
              th="Line number"
              th="Column number"
            - each err in data.jshint
              tr
                td=err.msg
                td=err.line
                td=err.col
      if data.duplicates.length
        section.summary
          h2="Code Duplication"
          table
            tr
              th="Message"
            - each err in data.duplicates
              tr
                td=err.title
              - for(var file in err.files)
                tr
                  td
                    span=err.files[file].file
                    span=" "
                    span=err.files[file].line
              tr
                td
                  pre=err.buffer
    div.source-code
      pre(class="brush: js;")=data.srcCode

    script(type="text/javascript").
      var errors = [],
        notCoveredLines = [];

    - each err in data.complexity.errors
        script(type="text/javascript").
          errors.push({ line: '#{err.position}', message: unescape('#{escape(err.msg)}') });
    - each err in data.jshint
        script(type="text/javascript").
          errors.push({ line: '#{err.line}', message: unescape('#{escape(err.msg)}')  });
    - each err in data.security
        script(type="text/javascript").
          errors.push({ line: '#{err.line}', message: unescape('#{escape(err.rule.desc)}') });
    - each err in data.duplicates
      - data.fileIndex = [];
      - Object.keys(err.files).forEach(function(key) {
        - if (data.fileIndex.indexOf(key) === -1 && err.files[key].file.trim() === data.file.trim()) {
          - data.fileIndex.push(key);
        - }
      - });
      - each index in data.fileIndex
        - if (err.files[index])
          script(type="text/javascript").
            errors.push({ line: '#{err.files[index].line}', message: unescape('#{escape(err.title)}') });
    - if (data.coverage)
      - each stmt in data.coverage.statements
        script(type="text/javascript").
          notCoveredLines.push({ start: #{stmt.start.line}, end: #{stmt.end.line} });

    script(type="text/javascript").
      $(document).ready(function() {
        setTimeout(function() {
          errors.forEach(function(err) {
            $('.line.number' + err.line).addClass('highlight');
            $('.line.number' + err.line + ':last').append('<span class="error-msg"> <- ' + err.message + '</span>');
          });
          notCoveredLines.forEach(function(line) {
            for (var i = line.start; i <= line.end; i++) {
              $('.line.number' + i + ':first').addClass('no-coverage');
            }
          });
        }, 500);
      });
